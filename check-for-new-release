#!/usr/bin/env python3

import os

import requests


def get_json(url):
  try:
    headers = {'User-Agent': 'request', 'Authorization': f"Bearer {os.environ.get('GITHUB_TOKEN')}"} if 'api.github.com' in url else {'User-Agent': 'request'}
    response = requests.get(url, headers=headers)
    response.raise_for_status()
  except requests.exceptions.HTTPError as err:
    raise SystemExit(err)
  return response.json()


latest_release = get_json("https://api.github.com/repos/coti-io/coti-node/releases")[0]['tag_name']
dockerhub_result = get_json(f"https://hub.docker.com/v2/repositories/{os.environ.get('DOCKERHUB_USERNAME')}/{os.environ.get('IMAGE_NAME')}/tags")['results']
if len(dockerhub_result) > 0:
  latest_image = dockerhub_result[1]['name']
else:
  latest_image = None

if latest_release == latest_image:
  is_new_release = "❌"
  print(f"✨ No new release found. The latest release is {latest_release} and the latest image version is {latest_image}. No build needed. This workflow run has completed successfully.")
else:
  is_new_release = "✅"
  print(f"✅ New release found (version {latest_release}).")

# Write results to github env
with open(os.environ.get('GITHUB_ENV'), 'a') as gh_envs:
  gh_envs.write(f'IS_NEW_RELEASE={is_new_release}\n')
  gh_envs.write(f'RELEASE_VERSION={latest_release}\n')
